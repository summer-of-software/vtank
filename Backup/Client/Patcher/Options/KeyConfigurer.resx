<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAJiUAAAAAGAAUEgAAFgAAACgAAAAmAAAASgAAAAEAGAAAAAAAAAAAAGAAAABgAAAAAAAAAAAA
        AAD78u778u778u778u778u778u778u778u7v5+Opo6Dt5eH78u778u7f19Owq6ijn5ynoJ7NxsPa08+1
        r6zk3Nn78u7q4t7Burf06+i5s7Dc1NH78u6oo6CSi4nRysf78u778u778u778u778u778u778u4AAPvy
        7vvy7vvy7vvy7vvy7vvy7vvy7vvy7qKdnCEhIM3Gwvvy7tzW0zAxMA0ODQUFBB0eHSYpKHNxcRsaGrm0
        sfvy7o+Lii4tLMvFwxQTE8C6t+jh3gwMDBcWFtbPzPvy7vvy7vvy7vvy7vvy7vvy7vvy7gAA+/Lu+/Lu
        +/Lu+/Lu+/Lu+/Lu+/Lu+/Luk4+OFRgXycK/+/Lud3V0AAAAISEhOTY1Ozo6EBMSVlVUBgcGtLCt+/Lu
        hoSDHB8epqKfCgsKa2dkfHl4AAAAjouJ+vHt+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu+/LuAAD78u778u778u77
        8u778u778u778u778u6OiokTFhXFvrv78u5ta2oAAABNTUtdWlhWVlQMDw5EREMCAgJ4dHGfmZZva2oW
        FxaBf30AAAAODg0SExI7Ozvz6+f78u778u778u778u778u778u778u778u4AAPvy7vvy7vvy7vvy7vvy
        7vvy7vvy7unh3YJ/fg8PDqmkoePb2NjSzzM0MxMUExMSESMjIgsKCiklIwAAABkaGQUGBj9GRBIUFGJh
        YAAAAAAAAAMDA5KRjvrx7fvy7vvy7vvy7vvy7vvy7vvy7vvy7vvy7gAA+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu
        8+voPDo5IyYlBgYGKCknPTw6rqmnGhwbHRsaHBwaHBwaCAgHJyUkAAAAHyAeFhgXICIhDQ0MTE5NAAAA
        KSsrCAgIMTIwvbaz+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu+/LuAAD78u778u778u778u778u778u7b1dIA
        AAAAAAAAAAAAAAAhIyKblZMAAAAAAAAAAAAAAAATExIeGhgAAAAAAAAAAAAAAAAQERFCQ0IAAAAyMzJz
        cW8BAQFHRkTY0c378u778u778u778u778u778u778u4AAPvy7vvy7vvy7vvy7vvy7vvy7sbBvgoJCAUD
        AwAAAAAAACAhILKtqyopKBUVFRUSERQTEhkYFxQWFB4fHQUFBAAAAAICAmhoZ1ZUUwoJCUVFQ+vj4CYl
        JQgIB4B9e/rx7fvy7vvy7vvy7vvy7vvy7vvy7gAA+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu9u7r8Ojl6+Ti
        4tjV39jV+vLvIyQjAwMDBQUFAwQEAQEBFhYVBwcHEhMSFBcWFBUVfX16+/Lv9+/s7ubj+/Lu1c7LurSy
        6ODc+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu+/LuAAD78u778u778u778u778u778u778u778u778u778u778u77
        8u7d2NUCAgIAAAAAAAADAwMXFxclJCQqKSgoJycgICAJCQk7Ozrw6OT78u778u778u778u778u778u77
        8u778u778u778u778u778u778u4AAPvy7vvy7vvy7vvy7vvy7vvy7vvy7vvy7vvy7vvy7vvy7vvy7qWh
        nwAAAAICAh0cHDo6OVdiXywsKycnJh4eHh0dHj9CQT4+PZmTkfrx7fvy7vvy7vvy7vvy7vvy7vvy7vvy
        7vvy7vvy7vvy7vvy7vvy7gAA+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu9ezoa2ppHRwc
        MjIxVVxaX2xogJuSPTc0KikoOj89ZHFrY3VwU1dVQD4+sKmn+vHu+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu
        +/Lu+/Lu+/Lu+/LuAAD78u778u778u778u778u778u778u778u778u768e3Kw8FpaGdAQUApKSk7PDt/
        mZNWVFBKR0NSRkFHQj5reHKAnZaHqqFhbGg2NDQ2NTW0rqv78u778u778u778u778u778u778u778u77
        8u778u778u4AAPvy7vvy7vvy7vvy7vvy7vvy7vvy7vvy7vnx7aunpVBSUE5VUnOJgSwqKSgoKDc1M01C
        PkpAPEpJRnB8dmuAeYepoYeon2FqZikqKyIiIzs5OdrSz/vy7vvy7vvy7vvy7vvy7vvy7vvy7vvy7vvy
        7vvy7gAA+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu+vHtr6yqPD4/cYeBYGdiWVlUT0M/Ozo3Nj47FBMSb396
        h6mhh6qhZHdyg6CYepWPODg4Ki0tJygpKSkqurSx+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu
        AAD78u778u778u778u778u778u778u7DvrxERUU2OTlLT01LQT1MQDxJQz9sd3E8SkYODg6KqqOGqJ+G
        qaJ5lI1VY187OzssLy8pKywqLC0lKCZXVVPk3Nj78u778u778u778u778u778u778u778u778u4AAPvy
        7vvy7vvy7vvy7vvy7vvy7uXe21JTUzo7PDc5Ojo8PCcnJ0xRTYWnoIepomJ3cXOOiIiro4eqoIaqoXaO
        iDU1NSsuLiYoKS0wMScrKREUESQkJFVUUtXOyvnx7fvy7vvy7vvy7vvy7vvy7vvy7vvy7gAA+/Lu+/Lu
        +/Lu+/Lu+/Lu+fHthoeFUllWOz8+OTo6cnJyNTY2VWllhaWdfpuThqmghqigh6mhh6mheZGLNjg4KSwt
        JikpKy0tJSonFCgTEiUPFBUUJCQkWmFcf3161s/L+/Lu+/Lu+/Lu+/Lu+/Lu+/LuAAD78u778u778u77
        8u778u7SzcpibGiDoppLVVIlJyZodXF6lo9+mJByhn9fc248Q0F7mZCGqaBZZWErLC0lJygmKCklJygX
        IhgLIQkPKwsRLwwSKA4UFhQUFBRQXFhiZWHQyMX78u778u778u778u778u4AAPvy7vvy7vvy7vvy7vvy
        7pSUk2p+eIWooE9PSzs2MlRgW4erom+FfoaqoW+CfDg0MTc5ODxAPycoKSMlJSYoKSIkJSMvJkh0XTVz
        TxQvEQ4qChEvDBEqDRQXE2Z8doKfmFRUUdfPzPvy7vvy7vvy7vvy7gAA+/Lu+/Lu+/Lu+/Lu+/Lui4uK
        ZHp0cIB7VkxHSj87bYF6h6mian96do6JV1dUODc2KCkpJCYmJCYmJCYmISYjT1xVXI10RHlaFDIQES4M
        ECwMDikKES4MESwNXnNodY6IKCgpYl9e+fHt+/Lu+/Lu+/LuAAD78u778u778u778u778u7e2NV3d3ZO
        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
        MjIzMjIyMjIySkxL4tvX+/Lu+/Lu+/Lu+/Lu+/Lu+/Lu+/LuAAD78u778u778u778u778u778u778u7q
        4+Dh3Nnh3Nnh3Nrh3Nrh3Nnu6OX78u778u778u778u778u778u778u778u778+/78+/78+/78+/78+/7
        8+/78+/78+/78u778u778u778u778u778u778u778u4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>